/*******************************************************************************
** patch.h (patch settings)
*******************************************************************************/

#ifndef PATCH_H
#define PATCH_H

#include "bank.h"
#include "voice.h"

enum
{
  PATCH_ADJUST_MODE_DIRECT = 0, 
  PATCH_ADJUST_MODE_RELATIVE 
};

enum
{
  PATCH_PARAM_ALGORITHM = 0, 
  PATCH_PARAM_HIGHPASS_CUTOFF, 
  PATCH_PARAM_LOWPASS_CUTOFF, 
  PATCH_PARAM_NOISE_PERIOD, 
  PATCH_PARAM_NOISE_MIX, 
  PATCH_PARAM_OSC_WAVEFORM, 
  PATCH_PARAM_OSC_FEEDBACK, 
  PATCH_PARAM_OSC_FREQ_MODE, 
  PATCH_PARAM_OSC_MULTIPLE, 
  PATCH_PARAM_OSC_DIVISOR, 
  PATCH_PARAM_OSC_DETUNE, 
  PATCH_PARAM_ENV_ATTACK, 
  PATCH_PARAM_ENV_DECAY_1, 
  PATCH_PARAM_ENV_DECAY_2, 
  PATCH_PARAM_ENV_RELEASE, 
  PATCH_PARAM_ENV_AMPLITUDE, 
  PATCH_PARAM_ENV_SUSTAIN, 
  PATCH_PARAM_ENV_RATE_KS, 
  PATCH_PARAM_ENV_LEVEL_KS, 
  PATCH_PARAM_ENV_SPECIAL_MODE, 
  PATCH_NUM_PARAMS
};

#define PATCH_ALGORITHM_LOWER_BOUND   0
#define PATCH_ALGORITHM_UPPER_BOUND   7
#define PATCH_ALGORITHM_NUM_VALUES    (PATCH_ALGORITHM_UPPER_BOUND - PATCH_ALGORITHM_LOWER_BOUND + 1)

#define PATCH_HIGHPASS_CUTOFF_LOWER_BOUND 0
#define PATCH_HIGHPASS_CUTOFF_UPPER_BOUND 3
#define PATCH_HIGHPASS_CUTOFF_NUM_VALUES  (PATCH_HIGHPASS_CUTOFF_UPPER_BOUND - PATCH_HIGHPASS_CUTOFF_LOWER_BOUND + 1)

#define PATCH_LOWPASS_CUTOFF_LOWER_BOUND  0
#define PATCH_LOWPASS_CUTOFF_UPPER_BOUND  3
#define PATCH_LOWPASS_CUTOFF_NUM_VALUES   (PATCH_LOWPASS_CUTOFF_UPPER_BOUND - PATCH_LOWPASS_CUTOFF_LOWER_BOUND + 1)

#define PATCH_NOISE_PERIOD_LOWER_BOUND  1
#define PATCH_NOISE_PERIOD_UPPER_BOUND  16
#define PATCH_NOISE_PERIOD_NUM_VALUES   (PATCH_NOISE_PERIOD_UPPER_BOUND - PATCH_NOISE_PERIOD_LOWER_BOUND + 1)

#define PATCH_NOISE_MIX_LOWER_BOUND 0
#define PATCH_NOISE_MIX_UPPER_BOUND 16
#define PATCH_NOISE_MIX_NUM_VALUES  (PATCH_NOISE_MIX_UPPER_BOUND - PATCH_NOISE_MIX_LOWER_BOUND + 1)

#define PATCH_OSC_WAVEFORM_LOWER_BOUND  0
#define PATCH_OSC_WAVEFORM_UPPER_BOUND  3
#define PATCH_OSC_WAVEFORM_NUM_VALUES   (PATCH_OSC_WAVEFORM_UPPER_BOUND - PATCH_OSC_WAVEFORM_LOWER_BOUND + 1)

#define PATCH_OSC_FEEDBACK_LOWER_BOUND  0
#define PATCH_OSC_FEEDBACK_UPPER_BOUND  7
#define PATCH_OSC_FEEDBACK_NUM_VALUES   (PATCH_OSC_FEEDBACK_UPPER_BOUND - PATCH_OSC_FEEDBACK_LOWER_BOUND + 1)

#define PATCH_OSC_FREQ_MODE_LOWER_BOUND   0
#define PATCH_OSC_FREQ_MODE_UPPER_BOUND   1
#define PATCH_OSC_FREQ_MODE_NUM_VALUES    (PATCH_OSC_FREQ_MODE_UPPER_BOUND - PATCH_OSC_FREQ_MODE_LOWER_BOUND + 1)

#define PATCH_OSC_MULTIPLE_LOWER_BOUND  1
#define PATCH_OSC_MULTIPLE_UPPER_BOUND  16
#define PATCH_OSC_MULTIPLE_NUM_VALUES   (PATCH_OSC_MULTIPLE_UPPER_BOUND - PATCH_OSC_MULTIPLE_LOWER_BOUND + 1)

#define PATCH_OSC_DIVISOR_LOWER_BOUND   1
#define PATCH_OSC_DIVISOR_UPPER_BOUND   8
#define PATCH_OSC_DIVISOR_NUM_VALUES    (PATCH_OSC_DIVISOR_UPPER_BOUND - PATCH_OSC_DIVISOR_LOWER_BOUND + 1)

#define PATCH_OSC_DETUNE_LOWER_BOUND   -8
#define PATCH_OSC_DETUNE_UPPER_BOUND    8
#define PATCH_OSC_DETUNE_NUM_VALUES     (PATCH_OSC_DETUNE_UPPER_BOUND - PATCH_OSC_DETUNE_LOWER_BOUND + 1)

#define PATCH_ENV_RATE_LOWER_BOUND  1
#define PATCH_ENV_RATE_UPPER_BOUND  32
#define PATCH_ENV_RATE_NUM_VALUES   (PATCH_ENV_RATE_UPPER_BOUND - PATCH_ENV_RATE_LOWER_BOUND + 1)

#define PATCH_ENV_AMPLITUDE_LOWER_BOUND 0
#define PATCH_ENV_AMPLITUDE_UPPER_BOUND 32
#define PATCH_ENV_AMPLITUDE_NUM_VALUES  (PATCH_ENV_AMPLITUDE_UPPER_BOUND - PATCH_ENV_AMPLITUDE_LOWER_BOUND + 1)

#define PATCH_ENV_SUSTAIN_LOWER_BOUND   0
#define PATCH_ENV_SUSTAIN_UPPER_BOUND   16
#define PATCH_ENV_SUSTAIN_NUM_VALUES    (PATCH_ENV_SUSTAIN_UPPER_BOUND - PATCH_ENV_SUSTAIN_LOWER_BOUND + 1)

#define PATCH_ENV_KEYSCALE_LOWER_BOUND  1
#define PATCH_ENV_KEYSCALE_UPPER_BOUND  8
#define PATCH_ENV_KEYSCALE_NUM_VALUES   (PATCH_ENV_KEYSCALE_UPPER_BOUND - PATCH_ENV_KEYSCALE_LOWER_BOUND + 1)

#define PATCH_ENV_SPECIAL_MODE_LOWER_BOUND  0
#define PATCH_ENV_SPECIAL_MODE_UPPER_BOUND  8
#define PATCH_ENV_SPECIAL_MODE_NUM_VALUES   (PATCH_ENV_SPECIAL_MODE_UPPER_BOUND - PATCH_ENV_SPECIAL_MODE_LOWER_BOUND + 1)

typedef struct patch
{
  /* algorithm */
  short int algorithm;

  /* filters */
  short int highpass_cutoff;
  short int lowpass_cutoff;

  /* noise */
  short int noise_period;
  short int noise_mix;

  /* oscillators */
  short int osc_waveform[VOICE_NUM_OSCS_AND_ENVS];
  short int osc_feedback[VOICE_NUM_OSCS_AND_ENVS];
  short int osc_freq_mode[VOICE_NUM_OSCS_AND_ENVS];
  short int osc_multiple[VOICE_NUM_OSCS_AND_ENVS];
  short int osc_divisor[VOICE_NUM_OSCS_AND_ENVS];
  short int osc_detune[VOICE_NUM_OSCS_AND_ENVS];

  /* envelopes */
  short int env_attack[VOICE_NUM_OSCS_AND_ENVS];
  short int env_decay_1[VOICE_NUM_OSCS_AND_ENVS];
  short int env_decay_2[VOICE_NUM_OSCS_AND_ENVS];
  short int env_release[VOICE_NUM_OSCS_AND_ENVS];
  short int env_amplitude[VOICE_NUM_OSCS_AND_ENVS];
  short int env_sustain[VOICE_NUM_OSCS_AND_ENVS];
  short int env_rate_ks[VOICE_NUM_OSCS_AND_ENVS];
  short int env_level_ks[VOICE_NUM_OSCS_AND_ENVS];
  short int env_special_mode[VOICE_NUM_OSCS_AND_ENVS];
} patch;

/* patch bank */
extern patch G_patch_bank[BANK_NUM_PATCHES];

/* function declarations */
short int patch_setup_all();
short int patch_reset(int patch_index);

short int patch_adjust_parameter( int patch_index, int param, int num, 
                                  int mode, int value);

#endif
