/*******************************************************************************
** patch.h (patch settings)
*******************************************************************************/

#ifndef PATCH_H
#define PATCH_H

#include "bank.h"

enum
{
  PATCH_WAVE_SET_TRIANGLE_SQUARE = 1, 
  PATCH_WAVE_SET_SQUARE_SAW, 
  PATCH_WAVE_SET_SAW_TRIANGLE 
};

enum
{
  PATCH_EXTRA_MODE_SUBOSCILLATOR = 1, 
  PATCH_EXTRA_MODE_NOISE, 
  PATCH_EXTRA_MODE_SYNC, 
  PATCH_EXTRA_MODE_RING_MOD, 
  PATCH_EXTRA_MODE_PHASE_MOD, 
  PATCH_EXTRA_MODE_PULSE_WIDTH_MOD, 
  PATCH_EXTRA_MODE_OVERDRIVE, 
  PATCH_EXTRA_MODE_WAVEFOLDING 
};

enum
{
  PATCH_SUBOSC_WAVEFORM_TRIANGLE = 1, 
  PATCH_SUBOSC_WAVEFORM_SQUARE, 
  PATCH_SUBOSC_WAVEFORM_SAW 
};

enum
{
  PATCH_RING_MOD_WAVEFORM_SQUARE = 1, 
  PATCH_RING_MOD_WAVEFORM_NOISE 
};

enum
{
  PATCH_PHASE_MOD_WAVEFORM_TRIANGLE = 1, 
  PATCH_PHASE_MOD_WAVEFORM_SQUARE, 
  PATCH_PHASE_MOD_WAVEFORM_SAW 
};

enum
{
  PATCH_HIGHPASS_CUTOFF_A0 = 1, 
  PATCH_HIGHPASS_CUTOFF_A1,
  PATCH_HIGHPASS_CUTOFF_A2,
  PATCH_HIGHPASS_CUTOFF_A3
};

enum
{
  PATCH_LFO_WAVEFORM_TRIANGLE = 1, 
  PATCH_LFO_WAVEFORM_SQUARE, 
  PATCH_LFO_WAVEFORM_SAW_UP, 
  PATCH_LFO_WAVEFORM_SAW_DOWN, 
  PATCH_LFO_WAVEFORM_NOISE_SQUARE, 
  PATCH_LFO_WAVEFORM_NOISE_SAW 
};

enum
{
  PATCH_LFO_POLARITY_UP_AND_DOWN = 1, 
  PATCH_LFO_POLARITY_UP_ONLY
};

enum
{
  PATCH_CHORUS_WAVEFORM_TRIANGLE = 1, 
  PATCH_CHORUS_WAVEFORM_SQUARE, 
  PATCH_CHORUS_WAVEFORM_SAW_UP, 
  PATCH_CHORUS_WAVEFORM_SAW_DOWN 
};

enum
{
  PATCH_PITCH_WHEEL_MODE_BEND = 1, 
  PATCH_PITCH_WHEEL_MODE_SEMITONES 
};

enum
{
  PATCH_ARPEGGIO_MODE_HARP = 1, 
  PATCH_ARPEGGIO_MODE_ROLLED 
};

enum
{
  PATCH_ARPEGGIO_PATTERN_UP = 0, 
  PATCH_ARPEGGIO_PATTERN_DOWN, 
  PATCH_ARPEGGIO_PATTERN_UP_AND_DOWN, 
  PATCH_ARPEGGIO_PATTERN_UP_AND_DOWN_ALT 
};

enum
{
  PATCH_PORTAMENTO_MODE_BEND = 1, 
  PATCH_PORTAMENTO_MODE_SEMITONES 
};

enum
{
  PATCH_PORTAMENTO_FOLLOW_CONTINUE = 0, 
  PATCH_PORTAMENTO_FOLLOW_RETURN 
};

enum
{
  PATCH_PORTAMENTO_LEGATO_OFF = 0, 
  PATCH_PORTAMENTO_LEGATO_ON 
};

enum
{
  PATCH_SYNC_OFF = 0, 
  PATCH_SYNC_ON 
};

/* cart parameters */
#define PATCH_CART_NO_DEFAULT     1
#define PATCH_CART_NO_LOWER_BOUND 1
#define PATCH_CART_NO_UPPER_BOUND BANK_NUM_CARTS
#define PATCH_CART_NO_NUM_VALUES  (PATCH_CART_NO_UPPER_BOUND - PATCH_CART_NO_LOWER_BOUND + 1)

#define PATCH_CART_NO_IS_VALID(num)                                            \
  ((num >= PATCH_CART_NO_LOWER_BOUND) && (num <= PATCH_CART_NO_UPPER_BOUND))

#define PATCH_CART_NO_IS_NOT_VALID(num)                                        \
  (!(PATCH_CART_NO_IS_VALID(num)))

#define PATCH_PATCH_NO_DEFAULT      1
#define PATCH_PATCH_NO_LOWER_BOUND  1
#define PATCH_PATCH_NO_UPPER_BOUND  BANK_PATCHES_PER_CART
#define PATCH_PATCH_NO_NUM_VALUES   (PATCH_PATCH_NO_UPPER_BOUND - PATCH_PATCH_NO_LOWER_BOUND + 1)

#define PATCH_PATCH_NO_IS_VALID(num)                                           \
  ((num >= PATCH_PATCH_NO_LOWER_BOUND) && (num <= PATCH_PATCH_NO_UPPER_BOUND))

#define PATCH_PATCH_NO_IS_NOT_VALID(num)                                       \
  (!(PATCH_PATCH_NO_IS_VALID(num)))

#define PATCH_COMPUTE_CART_INDEX(cart_num)                                     \
  cart_index = cart_num - PATCH_CART_NO_LOWER_BOUND;

#define PATCH_COMPUTE_PATCH_INDEX(cart_num, patch_num)                         \
  patch_index = ((cart_num - PATCH_CART_NO_LOWER_BOUND) * BANK_PATCHES_PER_CART) + (patch_num - PATCH_PATCH_NO_LOWER_BOUND);

/* name strings: x characters + 1 null terminator */
#define PATCH_CART_NAME_SIZE  (8 + 1)
#define PATCH_PATCH_NAME_SIZE (10 + 1)

/* patch parameters */

/* wave */
#define PATCH_WAVE_SET_DEFAULT      PATCH_WAVE_SET_TRIANGLE_SQUARE
#define PATCH_WAVE_SET_LOWER_BOUND  PATCH_WAVE_SET_TRIANGLE_SQUARE
#define PATCH_WAVE_SET_UPPER_BOUND  PATCH_WAVE_SET_SAW_TRIANGLE
#define PATCH_WAVE_SET_NUM_VALUES   (PATCH_WAVE_SET_UPPER_BOUND - PATCH_WAVE_SET_LOWER_BOUND + 1)

#define PATCH_WAVE_MIX_DEFAULT      50
#define PATCH_WAVE_MIX_LOWER_BOUND  0
#define PATCH_WAVE_MIX_UPPER_BOUND  100
#define PATCH_WAVE_MIX_NUM_VALUES   (PATCH_WAVE_MIX_UPPER_BOUND - PATCH_WAVE_MIX_LOWER_BOUND + 1)

/* extra */
#define PATCH_EXTRA_MODE_DEFAULT      PATCH_EXTRA_MODE_SUBOSCILLATOR
#define PATCH_EXTRA_MODE_LOWER_BOUND  PATCH_EXTRA_MODE_SUBOSCILLATOR
#define PATCH_EXTRA_MODE_UPPER_BOUND  PATCH_EXTRA_MODE_WAVEFOLDING
#define PATCH_EXTRA_MODE_NUM_VALUES   (PATCH_EXTRA_MODE_UPPER_BOUND - PATCH_EXTRA_MODE_LOWER_BOUND + 1)

#define PATCH_SUBOSC_WAVEFORM_DEFAULT      PATCH_SUBOSC_WAVEFORM_TRIANGLE
#define PATCH_SUBOSC_WAVEFORM_LOWER_BOUND  PATCH_SUBOSC_WAVEFORM_TRIANGLE
#define PATCH_SUBOSC_WAVEFORM_UPPER_BOUND  PATCH_SUBOSC_WAVEFORM_SAW
#define PATCH_SUBOSC_WAVEFORM_NUM_VALUES   (PATCH_SUBOSC_WAVEFORM_UPPER_BOUND - PATCH_SUBOSC_WAVEFORM_LOWER_BOUND + 1)

#define PATCH_SUBOSC_MIX_DEFAULT      0
#define PATCH_SUBOSC_MIX_LOWER_BOUND  0
#define PATCH_SUBOSC_MIX_UPPER_BOUND  100
#define PATCH_SUBOSC_MIX_NUM_VALUES   (PATCH_SUBOSC_MIX_UPPER_BOUND - PATCH_SUBOSC_MIX_LOWER_BOUND + 1)

/* lowpass filter */
#define PATCH_LOWPASS_MULTIPLE_DEFAULT      16
#define PATCH_LOWPASS_MULTIPLE_LOWER_BOUND  1
#define PATCH_LOWPASS_MULTIPLE_UPPER_BOUND  16
#define PATCH_LOWPASS_MULTIPLE_NUM_VALUES   (PATCH_LOWPASS_MULTIPLE_UPPER_BOUND - PATCH_LOWPASS_MULTIPLE_LOWER_BOUND + 1)

#define PATCH_LOWPASS_RESONANCE_DEFAULT     1
#define PATCH_LOWPASS_RESONANCE_LOWER_BOUND 1
#define PATCH_LOWPASS_RESONANCE_UPPER_BOUND 16
#define PATCH_LOWPASS_RESONANCE_NUM_VALUES  (PATCH_LOWPASS_RESONANCE_UPPER_BOUND - PATCH_LOWPASS_RESONANCE_LOWER_BOUND + 1)

#define PATCH_LOWPASS_KEYTRACKING_DEFAULT     0
#define PATCH_LOWPASS_KEYTRACKING_LOWER_BOUND 0
#define PATCH_LOWPASS_KEYTRACKING_UPPER_BOUND 8
#define PATCH_LOWPASS_KEYTRACKING_NUM_VALUES  (PATCH_LOWPASS_KEYTRACKING_UPPER_BOUND - PATCH_LOWPASS_KEYTRACKING_LOWER_BOUND + 1)

/* highpass filter */
#define PATCH_HIGHPASS_CUTOFF_DEFAULT     PATCH_HIGHPASS_CUTOFF_A0
#define PATCH_HIGHPASS_CUTOFF_LOWER_BOUND PATCH_HIGHPASS_CUTOFF_A0
#define PATCH_HIGHPASS_CUTOFF_UPPER_BOUND PATCH_HIGHPASS_CUTOFF_A3
#define PATCH_HIGHPASS_CUTOFF_NUM_VALUES  (PATCH_HIGHPASS_CUTOFF_UPPER_BOUND - PATCH_HIGHPASS_CUTOFF_LOWER_BOUND + 1)

/* amplitude envelope */
#define PATCH_ENV_TIME_DEFAULT      1
#define PATCH_ENV_TIME_LOWER_BOUND  1
#define PATCH_ENV_TIME_UPPER_BOUND  100
#define PATCH_ENV_TIME_NUM_VALUES   (PATCH_ENV_TIME_UPPER_BOUND - PATCH_ENV_TIME_LOWER_BOUND + 1)

#define PATCH_ENV_LEVEL_DEFAULT     0
#define PATCH_ENV_LEVEL_LOWER_BOUND 0
#define PATCH_ENV_LEVEL_UPPER_BOUND 100
#define PATCH_ENV_LEVEL_NUM_VALUES  (PATCH_ENV_LEVEL_UPPER_BOUND - PATCH_ENV_LEVEL_LOWER_BOUND + 1)

#define PATCH_ENV_KEYSCALING_DEFAULT      2
#define PATCH_ENV_KEYSCALING_LOWER_BOUND  0
#define PATCH_ENV_KEYSCALING_UPPER_BOUND  8
#define PATCH_ENV_KEYSCALING_NUM_VALUES   (PATCH_ENV_KEYSCALING_UPPER_BOUND - PATCH_ENV_KEYSCALING_LOWER_BOUND + 1)

#define PATCH_ENV_BREAK_POINT_DEFAULT     5
#define PATCH_ENV_BREAK_POINT_LOWER_BOUND 1
#define PATCH_ENV_BREAK_POINT_UPPER_BOUND 16
#define PATCH_ENV_BREAK_POINT_NUM_VALUES  (PATCH_ENV_BREAK_POINT_UPPER_BOUND - PATCH_ENV_BREAK_POINT_LOWER_BOUND + 1)

/* pitch envelopes */
#define PATCH_PEG_TIME_DEFAULT      1
#define PATCH_PEG_TIME_LOWER_BOUND  1
#define PATCH_PEG_TIME_UPPER_BOUND  100
#define PATCH_PEG_TIME_NUM_VALUES   (PATCH_PEG_TIME_UPPER_BOUND - PATCH_PEG_TIME_LOWER_BOUND + 1)

#define PATCH_PEG_LEVEL_DEFAULT     0
#define PATCH_PEG_LEVEL_LOWER_BOUND -48
#define PATCH_PEG_LEVEL_UPPER_BOUND 48
#define PATCH_PEG_LEVEL_NUM_VALUES  (PATCH_PEG_LEVEL_UPPER_BOUND - PATCH_PEG_LEVEL_LOWER_BOUND + 1)

#define PATCH_PEG_KEYSCALING_DEFAULT      2
#define PATCH_PEG_KEYSCALING_LOWER_BOUND  0
#define PATCH_PEG_KEYSCALING_UPPER_BOUND  8
#define PATCH_PEG_KEYSCALING_NUM_VALUES   (PATCH_PEG_KEYSCALING_UPPER_BOUND - PATCH_PEG_KEYSCALING_LOWER_BOUND + 1)

/* lfo */
#define PATCH_LFO_WAVEFORM_DEFAULT      PATCH_LFO_WAVEFORM_TRIANGLE
#define PATCH_LFO_WAVEFORM_LOWER_BOUND  PATCH_LFO_WAVEFORM_TRIANGLE
#define PATCH_LFO_WAVEFORM_UPPER_BOUND  PATCH_LFO_WAVEFORM_NOISE_SAW
#define PATCH_LFO_WAVEFORM_NUM_VALUES   (PATCH_LFO_WAVEFORM_UPPER_BOUND - PATCH_LFO_WAVEFORM_LOWER_BOUND + 1)

#define PATCH_LFO_FREQUENCY_DEFAULT     16
#define PATCH_LFO_FREQUENCY_LOWER_BOUND 1
#define PATCH_LFO_FREQUENCY_UPPER_BOUND 32
#define PATCH_LFO_FREQUENCY_NUM_VALUES  (PATCH_LFO_FREQUENCY_UPPER_BOUND - PATCH_LFO_FREQUENCY_LOWER_BOUND + 1)

#define PATCH_LFO_DELAY_DEFAULT         0
#define PATCH_LFO_DELAY_LOWER_BOUND     0
#define PATCH_LFO_DELAY_UPPER_BOUND     24
#define PATCH_LFO_DELAY_NUM_VALUES      (PATCH_LFO_DELAY_UPPER_BOUND - PATCH_LFO_DELAY_LOWER_BOUND + 1)

#define PATCH_LFO_POLARITY_DEFAULT      PATCH_LFO_POLARITY_UP_AND_DOWN
#define PATCH_LFO_POLARITY_LOWER_BOUND  PATCH_LFO_POLARITY_UP_AND_DOWN
#define PATCH_LFO_POLARITY_UPPER_BOUND  PATCH_LFO_POLARITY_UP_ONLY
#define PATCH_LFO_POLARITY_NUM_VALUES   (PATCH_LFO_POLARITY_UPPER_BOUND - PATCH_LFO_POLARITY_LOWER_BOUND + 1)

#define PATCH_LFO_BASE_DEFAULT          0
#define PATCH_LFO_BASE_LOWER_BOUND      0
#define PATCH_LFO_BASE_UPPER_BOUND      100
#define PATCH_LFO_BASE_NUM_VALUES       (PATCH_LFO_BASE_UPPER_BOUND - PATCH_LFO_BASE_LOWER_BOUND + 1)

#define PATCH_LFO_DEPTH_DEFAULT         1
#define PATCH_LFO_DEPTH_LOWER_BOUND     1
#define PATCH_LFO_DEPTH_UPPER_BOUND     16
#define PATCH_LFO_DEPTH_NUM_VALUES      (PATCH_LFO_DEPTH_UPPER_BOUND - PATCH_LFO_DEPTH_LOWER_BOUND + 1)

/* chorus */
#define PATCH_CHORUS_WAVEFORM_DEFAULT       PATCH_CHORUS_WAVEFORM_TRIANGLE
#define PATCH_CHORUS_WAVEFORM_LOWER_BOUND   PATCH_CHORUS_WAVEFORM_TRIANGLE
#define PATCH_CHORUS_WAVEFORM_UPPER_BOUND   PATCH_CHORUS_WAVEFORM_SAW_DOWN
#define PATCH_CHORUS_WAVEFORM_NUM_VALUES    (PATCH_CHORUS_WAVEFORM_UPPER_BOUND - PATCH_CHORUS_WAVEFORM_LOWER_BOUND + 1)

#define PATCH_CHORUS_FREQUENCY_DEFAULT      16
#define PATCH_CHORUS_FREQUENCY_LOWER_BOUND  1
#define PATCH_CHORUS_FREQUENCY_UPPER_BOUND  32
#define PATCH_CHORUS_FREQUENCY_NUM_VALUES   (PATCH_CHORUS_FREQUENCY_UPPER_BOUND - PATCH_CHORUS_FREQUENCY_LOWER_BOUND + 1)

#define PATCH_CHORUS_DRY_WET_DEFAULT        0
#define PATCH_CHORUS_DRY_WET_LOWER_BOUND    0
#define PATCH_CHORUS_DRY_WET_UPPER_BOUND    100
#define PATCH_CHORUS_DRY_WET_NUM_VALUES     (PATCH_CHORUS_DRY_WET_UPPER_BOUND - PATCH_CHORUS_DRY_WET_LOWER_BOUND + 1)

#define PATCH_CHORUS_BASE_DEFAULT           0
#define PATCH_CHORUS_BASE_LOWER_BOUND       0
#define PATCH_CHORUS_BASE_UPPER_BOUND       100
#define PATCH_CHORUS_BASE_NUM_VALUES        (PATCH_CHORUS_BASE_UPPER_BOUND - PATCH_CHORUS_BASE_LOWER_BOUND + 1)

#define PATCH_CHORUS_DEPTH_DEFAULT          1
#define PATCH_CHORUS_DEPTH_LOWER_BOUND      1
#define PATCH_CHORUS_DEPTH_UPPER_BOUND      16
#define PATCH_CHORUS_DEPTH_NUM_VALUES       (PATCH_CHORUS_DEPTH_UPPER_BOUND - PATCH_CHORUS_DEPTH_LOWER_BOUND + 1)

/* arpeggio */
#define PATCH_ARPEGGIO_MODE_DEFAULT         PATCH_ARPEGGIO_MODE_HARP
#define PATCH_ARPEGGIO_MODE_LOWER_BOUND     PATCH_ARPEGGIO_MODE_HARP
#define PATCH_ARPEGGIO_MODE_UPPER_BOUND     PATCH_ARPEGGIO_MODE_ROLLED
#define PATCH_ARPEGGIO_MODE_NUM_VALUES      (PATCH_ARPEGGIO_MODE_UPPER_BOUND - PATCH_ARPEGGIO_MODE_LOWER_BOUND + 1)

#define PATCH_ARPEGGIO_PATTERN_DEFAULT      PATCH_ARPEGGIO_PATTERN_UP
#define PATCH_ARPEGGIO_PATTERN_LOWER_BOUND  PATCH_ARPEGGIO_PATTERN_UP
#define PATCH_ARPEGGIO_PATTERN_UPPER_BOUND  PATCH_ARPEGGIO_PATTERN_UP_AND_DOWN_ALT
#define PATCH_ARPEGGIO_PATTERN_NUM_VALUES   (PATCH_ARPEGGIO_PATTERN_UPPER_BOUND - PATCH_ARPEGGIO_PATTERN_LOWER_BOUND + 1)

#define PATCH_ARPEGGIO_OCTAVES_DEFAULT      1
#define PATCH_ARPEGGIO_OCTAVES_LOWER_BOUND  1
#define PATCH_ARPEGGIO_OCTAVES_UPPER_BOUND  4
#define PATCH_ARPEGGIO_OCTAVES_NUM_VALUES   (PATCH_ARPEGGIO_OCTAVES_UPPER_BOUND - PATCH_ARPEGGIO_OCTAVES_LOWER_BOUND + 1)

#define PATCH_ARPEGGIO_SPEED_DEFAULT        1
#define PATCH_ARPEGGIO_SPEED_LOWER_BOUND    1
#define PATCH_ARPEGGIO_SPEED_UPPER_BOUND    12
#define PATCH_ARPEGGIO_SPEED_NUM_VALUES     (PATCH_ARPEGGIO_SPEED_UPPER_BOUND - PATCH_ARPEGGIO_SPEED_LOWER_BOUND + 1)

/* portamento */
#define PATCH_PORTAMENTO_MODE_DEFAULT       PATCH_PORTAMENTO_MODE_BEND
#define PATCH_PORTAMENTO_MODE_LOWER_BOUND   PATCH_PORTAMENTO_MODE_BEND
#define PATCH_PORTAMENTO_MODE_UPPER_BOUND   PATCH_PORTAMENTO_MODE_SEMITONES
#define PATCH_PORTAMENTO_MODE_NUM_VALUES    (PATCH_PORTAMENTO_MODE_UPPER_BOUND - PATCH_PORTAMENTO_MODE_LOWER_BOUND + 1)

#define PATCH_PORTAMENTO_FOLLOW_DEFAULT     PATCH_PORTAMENTO_FOLLOW_CONTINUE
#define PATCH_PORTAMENTO_FOLLOW_LOWER_BOUND PATCH_PORTAMENTO_FOLLOW_CONTINUE
#define PATCH_PORTAMENTO_FOLLOW_UPPER_BOUND PATCH_PORTAMENTO_FOLLOW_RETURN
#define PATCH_PORTAMENTO_FOLLOW_NUM_VALUES  (PATCH_PORTAMENTO_FOLLOW_UPPER_BOUND - PATCH_PORTAMENTO_FOLLOW_LOWER_BOUND + 1)

#define PATCH_PORTAMENTO_LEGATO_DEFAULT     PATCH_PORTAMENTO_LEGATO_OFF
#define PATCH_PORTAMENTO_LEGATO_LOWER_BOUND PATCH_PORTAMENTO_LEGATO_OFF
#define PATCH_PORTAMENTO_LEGATO_UPPER_BOUND PATCH_PORTAMENTO_LEGATO_ON
#define PATCH_PORTAMENTO_LEGATO_NUM_VALUES  (PATCH_PORTAMENTO_LEGATO_UPPER_BOUND - PATCH_PORTAMENTO_LEGATO_LOWER_BOUND + 1)

#define PATCH_PORTAMENTO_SPEED_DEFAULT      8
#define PATCH_PORTAMENTO_SPEED_LOWER_BOUND  1
#define PATCH_PORTAMENTO_SPEED_UPPER_BOUND  16
#define PATCH_PORTAMENTO_SPEED_NUM_VALUES   (PATCH_PORTAMENTO_SPEED_UPPER_BOUND - PATCH_PORTAMENTO_SPEED_LOWER_BOUND + 1)

/* sync */
#define PATCH_SYNC_DEFAULT        PATCH_SYNC_ON
#define PATCH_SYNC_LOWER_BOUND    PATCH_SYNC_OFF
#define PATCH_SYNC_UPPER_BOUND    PATCH_SYNC_ON
#define PATCH_SYNC_NUM_VALUES     (PATCH_SYNC_UPPER_BOUND - PATCH_SYNC_LOWER_BOUND + 1)

/* bitcrush */
#define PATCH_BITCRUSH_ENV_DEFAULT      0
#define PATCH_BITCRUSH_ENV_LOWER_BOUND  0
#define PATCH_BITCRUSH_ENV_UPPER_BOUND  8
#define PATCH_BITCRUSH_ENV_NUM_VALUES   (PATCH_BITCRUSH_ENV_UPPER_BOUND - PATCH_BITCRUSH_ENV_LOWER_BOUND + 1)

#define PATCH_BITCRUSH_OSC_DEFAULT      0
#define PATCH_BITCRUSH_OSC_LOWER_BOUND  0
#define PATCH_BITCRUSH_OSC_UPPER_BOUND  8
#define PATCH_BITCRUSH_OSC_NUM_VALUES   (PATCH_BITCRUSH_OSC_UPPER_BOUND - PATCH_BITCRUSH_OSC_LOWER_BOUND + 1)

/* envelope bias */
#define PATCH_BOOST_DEPTH_DEFAULT     1
#define PATCH_BOOST_DEPTH_LOWER_BOUND 1
#define PATCH_BOOST_DEPTH_UPPER_BOUND 16
#define PATCH_BOOST_DEPTH_NUM_VALUES  (PATCH_BOOST_DEPTH_UPPER_BOUND - PATCH_BOOST_DEPTH_LOWER_BOUND + 1)

#define PATCH_VELOCITY_DEPTH_DEFAULT      4
#define PATCH_VELOCITY_DEPTH_LOWER_BOUND  0
#define PATCH_VELOCITY_DEPTH_UPPER_BOUND  8
#define PATCH_VELOCITY_DEPTH_NUM_VALUES   (PATCH_VELOCITY_DEPTH_UPPER_BOUND - PATCH_VELOCITY_DEPTH_LOWER_BOUND + 1)

/* pitch wheel */
#define PATCH_PITCH_WHEEL_MODE_DEFAULT      PATCH_PITCH_WHEEL_MODE_BEND
#define PATCH_PITCH_WHEEL_MODE_LOWER_BOUND  PATCH_PITCH_WHEEL_MODE_BEND
#define PATCH_PITCH_WHEEL_MODE_UPPER_BOUND  PATCH_PITCH_WHEEL_MODE_SEMITONES
#define PATCH_PITCH_WHEEL_MODE_NUM_VALUES   (PATCH_PITCH_WHEEL_MODE_UPPER_BOUND - PATCH_PITCH_WHEEL_MODE_LOWER_BOUND + 1)

#define PATCH_PITCH_WHEEL_RANGE_DEFAULT     1
#define PATCH_PITCH_WHEEL_RANGE_LOWER_BOUND 1
#define PATCH_PITCH_WHEEL_RANGE_UPPER_BOUND 12
#define PATCH_PITCH_WHEEL_RANGE_NUM_VALUES  (PATCH_PITCH_WHEEL_RANGE_UPPER_BOUND - PATCH_PITCH_WHEEL_RANGE_LOWER_BOUND + 1)

/* sustain pedal */
#define PATCH_PEDAL_ADJUST_DEFAULT      4
#define PATCH_PEDAL_ADJUST_LOWER_BOUND  0
#define PATCH_PEDAL_ADJUST_UPPER_BOUND  8
#define PATCH_PEDAL_ADJUST_NUM_VALUES   (PATCH_PEDAL_ADJUST_UPPER_BOUND - PATCH_PEDAL_ADJUST_LOWER_BOUND + 1)

/* routing parameter flags */
#define PATCH_LFO_ROUTING_CLEAR                 0x00
#define PATCH_LFO_ROUTING_MASK                  0x0F

#define PATCH_LFO_ROUTING_FLAG_VIBRATO          0x01
#define PATCH_LFO_ROUTING_FLAG_AMP_TREM         0x02
#define PATCH_LFO_ROUTING_FLAG_FILTER_TREM      0x04
#define PATCH_LFO_ROUTING_FLAG_EXTRA_TREM       0x08

#define PATCH_ENV_BIAS_ROUTING_CLEAR            0x00
#define PATCH_ENV_BIAS_ROUTING_MASK             0x07

#define PATCH_ENV_BIAS_ROUTING_FLAG_AMP_ENV     0x01
#define PATCH_ENV_BIAS_ROUTING_FLAG_FILTER_ENV  0x02
#define PATCH_ENV_BIAS_ROUTING_FLAG_EXTRA_ENV   0x04

#define PATCH_MIDI_CONT_ROUTING_CLEAR           0x00
#define PATCH_MIDI_CONT_ROUTING_MASK            0x0F

#define PATCH_MIDI_CONT_ROUTING_FLAG_LFO_1      0x01
#define PATCH_MIDI_CONT_ROUTING_FLAG_LFO_2      0x02
#define PATCH_MIDI_CONT_ROUTING_FLAG_BOOST      0x04
#define PATCH_MIDI_CONT_ROUTING_FLAG_CHORUS     0x08

typedef struct patch
{
  /* wave */
  short int wave_set;
  short int wave_mix;

  /* extra */
  short int extra_mode;

  short int subosc_waveform;
  short int subosc_mix;

  /* lowpass filter */
  short int lowpass_multiple;
  short int lowpass_resonance;
  short int lowpass_keytracking;

  /* highpass filter */
  short int highpass_cutoff;

  /* amplitude envelope */
  short int env_attack;
  short int env_decay_1;
  short int env_decay_2;
  short int env_release;
  short int env_sustain;
  short int env_rate_ks;
  short int env_level_ks;
  short int env_break_point;

  /* filter / pitch / extra envelopes */
  short int peg_attack[BANK_PEGS_PER_VOICE];
  short int peg_decay[BANK_PEGS_PER_VOICE];
  short int peg_release[BANK_PEGS_PER_VOICE];
  short int peg_level[BANK_PEGS_PER_VOICE];
  short int peg_hold[BANK_PEGS_PER_VOICE];
  short int peg_finale[BANK_PEGS_PER_VOICE];
  short int peg_rate_ks[BANK_PEGS_PER_VOICE];

  /* lfo */
  short int lfo_waveform[BANK_LFOS_PER_VOICE];
  short int lfo_delay[BANK_LFOS_PER_VOICE];
  short int lfo_polarity[BANK_LFOS_PER_VOICE];
  short int lfo_frequency[BANK_LFOS_PER_VOICE];
  short int lfo_base[BANK_LFOS_PER_VOICE];
  short int lfo_depth[BANK_LFOS_PER_VOICE];

  /* chorus */
  short int chorus_waveform;
  short int chorus_frequency;
  short int chorus_dry_wet;
  short int chorus_base;
  short int chorus_depth;

  /* arpeggio */
  short int arpeggio_mode;
  short int arpeggio_pattern;
  short int arpeggio_octaves;
  short int arpeggio_speed;

  /* portamento */
  short int portamento_mode;
  short int portamento_follow;
  short int portamento_legato;
  short int portamento_speed;

  /* sync */
  short int sync_osc;
  short int sync_lfo;

  /* bitcrush */
  short int bitcrush_env;
  short int bitcrush_osc;

  /* envelope bias */
  short int boost_depth;
  short int velocity_depth;

  /* pitch wheel */
  short int pitch_wheel_mode;
  short int pitch_wheel_range;

  /* sustain pedal */
  short int pedal_adjust;

  /* lfo routing */
  short int lfo_routing;

  /* envelope bias routing */
  short int boost_routing;
  short int velocity_routing;

  /* midi controller routing */
  short int mod_wheel_routing;
  short int aftertouch_routing;
  short int exp_pedal_routing;
} patch;

/* name & patch banks */
extern char   G_cart_names[BANK_NUM_CARTS][PATCH_CART_NAME_SIZE];
extern char   G_patch_names[BANK_NUM_PATCHES][PATCH_PATCH_NAME_SIZE];

extern patch  G_patch_bank[BANK_NUM_PATCHES];

/* function declarations */
short int patch_reset_all();

short int patch_reset_patch(int patch_index);
short int patch_validate_patch(int patch_index);
short int patch_copy_patch(int dest_patch_index, int src_patch_index);

short int patch_reset_cart(int cart_index);
short int patch_validate_cart(int cart_index);
short int patch_copy_cart(int dest_cart_index, int src_cart_index);

#endif
